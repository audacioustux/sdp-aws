version: '3'

dotenv: ['.env']

tasks:
  pulumi:org:set-default:
    cmds:
      - echo "Setting default Pulumi organization to - $PULUMI_DEFAULT_ORG"
      - pulumi org set-default $PULUMI_DEFAULT_ORG

  deps:
    deps:
      - pulumi:org:set-default
    cmd: pulumi install

  format:
    deps: [deps]
    cmd: pnpm run format

  up:
    deps: [deps, ecr:public:login]
    env:
      PULUMI_K8S_ENABLE_SERVER_SIDE_APPLY: true
      PULUMI_K8S_CLIENT_TIMEOUT: 180
    cmd: pulumi up -s prod {{.CLI_ARGS}}

  # miscellanea
  cloc: cloc . --vcs git
  aws:login: aws configure sso --profile default
  docker:logout: rm ~/.docker/config.json || true # yah i know there's `docker login`
  ecr:public:login:
    deps: [docker:logout]
    cmd: aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 343301376154.dkr.ecr.ap-south-1.amazonaws.com
  ect:private:login: aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 147303785652.dkr.ecr.ap-south-1.amazonaws.com
  kubeconfig:update:
    cmd: mkdir -p ~/.kube && pulumi stack -s prod output kubeconfig > ~/.kube/config
    generates: [~/.kube/config]
  argocd:password:
    deps: [kubeconfig:update]
    cmd: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
  argocd:ui:
    deps: [kubeconfig:update]
    cmds:
      - echo "ArgoCD password - $(task argocd:password)"
      - kubectl port-forward svc/argocd-server -n argocd 8080:443
  grafana:ui:
    deps: [kubeconfig:update]
    cmd: kubectl port-forward svc/kube-prometheus-stack-grafana 8081:80 -n monitoring
  hubble:ui:
    deps: [kubeconfig:update]
    cmd: cilium hubble ui
  k9s:
    deps: [kubeconfig:update]
    cmd: k9s -A --headless --crumbsless
